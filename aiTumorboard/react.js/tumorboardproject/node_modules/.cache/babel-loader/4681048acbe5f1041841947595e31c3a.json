{"ast":null,"code":"var _jsxFileName = \"E:\\\\Git\\\\aiTumorboard\\\\react.js\\\\tumorboardproject\\\\src\\\\ComponentsDoctor\\\\CheckConclusion.js\";\nimport './Tumor.css';\nimport '../ComponentsDoctor/Tumor.css';\nimport react from 'react';\nimport SpringApiUrl from '../services/UserServiceApi';\nimport SpringApiDocsListUrl from '../services/DoctorsList';\nimport SpringPatientsListApiUrl from '../services/PatientsList';\nimport NursenavigatorUrl from '../services/NursenavigatorURL'; //Gimport './Tumor.css';\n\nimport axios from 'axios';\nimport DatePicker from 'react-datetime';\nimport moment from 'moment-timezone';\nimport 'react-datetime/css/react-datetime.css'; //import ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\n//import { Multiselect } from 'multiselect-react-dropdown';\n//import Select from \"react-select\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\"; //import CheckConclusionUrl from '../services/CheckConclusionUrl';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CheckConclusion extends react.Component {\n  constructor(props) {\n    var abc = \"yes\";\n    super(props);\n\n    this.Changedate = event => {\n      this.setState({\n        date_time: event\n      });\n    };\n\n    this.patientChange = event => {\n      var x = 0;\n\n      if (event == undefined) {\n        // alert(\"undefined\")\n        x = this.props.location.state.patientID;\n      } //else x = event.value;\n\n\n      axios.get('https://tumorboard-308606.el.r.appspot.com/getCheckconclusion?id=' + x).then(res => {\n        const Con = res.data;\n        this.setState({\n          Conclusion: Con\n        });\n      }).catch(e => {\n        console.log(\"error: \" + e);\n        alert(\"This Patient ID does not exist in the system\");\n      });\n    };\n\n    this.handleSubmit = event => {\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        type: this.state.type,\n        notes: this.state.notes,\n        nextaction: this.state.nextaction,\n        date_time: moment(),\n        responsible: this.state.responsible,\n        docsList: [],\n        nursenav: this.state.nursenav,\n        priority: this.state.priority,\n        feedback: this.state.feedback,\n        patientIdFk: this.state.patientIdFk,\n        nurse: []\n      };\n      fetch('https://tumorboard-308606.el.r.appspot.com/addConclusion', {\n        method: \"POST\",\n        body: JSON.stringify(requestOptions),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n          \"Access-Control-Allow-Origin\": \"*\"\n        }\n      }).then(response => {\n        if (!response.ok) {\n          alert(\"There is an error\");\n          throw new Error(response.status);\n        } else {\n          alert(\"Conclusion Added\");\n          return;\n        }\n      }).then(json => console.log(json)); //.catch(err => console.log(err)); \n    };\n\n    this.state = {\n      type: \"Diagnosis\",\n      notes: \"\",\n      nextaction: \"\",\n      date_time: moment(),\n      responsible: \"\",\n      docsList: [],\n      nursenav: \"\",\n      priority: \"\",\n      patientIdFk: 1,\n      feedback: \"\",\n      nurse: [],\n      result: [],\n      Conclusion: []\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.patientChange = this.patientChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target; // alert(\"name:\"+target.name) ;\n\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleChangeAttendingDoc(event) {\n    var options = event.target.options;\n    var value = [];\n\n    for (var i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n\n    this.setState({\n      attending_doc: value\n    });\n  }\n\n  componentDidMount() {\n    SpringApiDocsListUrl.getApi().then(response => {\n      this.setState({\n        docsList: response.data\n      });\n    });\n    SpringApiUrl.getApi().then(response => {\n      this.setState({\n        result: response.data\n      });\n    });\n    SpringPatientsListApiUrl.getApi().then(response => {\n      this.setState({\n        patientsList: response.data\n      });\n    });\n    if (this.props.location.state == undefined) return;\n    this.patientChange(); // CheckConclusionUrl.getApiC().then((response) => {\n    //  this.setState({ Conclusion: response.data })\n    // });\n  }\n\n  render() {\n    const yesterday = moment().subtract(1, 'day');\n\n    const disablePastDt = current => {\n      return current.isAfter(yesterday);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"header\",\n        style: {\n          background: '#eee'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          width: '100%',\n          display: 'flex',\n          maxWidth: '1800px',\n          background: '#eee'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"content_div\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"content_header\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Conclusions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"container\",\n            className: \"theme theme_font_neoskeuo theme_space_neoskeuo theme_color_neoskeuo\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              class: \"table shadow-soft rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  style: {\n                    fontWeight: \"bolder\",\n                    color: \"#3498DB\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    scope: \"row\",\n                    children: \" Type \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    scope: \"row\",\n                    children: \" Notes \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    scope: \"row\",\n                    children: \" Next Action \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    scope: \"row\",\n                    children: \" Date & Time \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    scope: \"row\",\n                    children: \" Responsible Doctor \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    scope: \"row\",\n                    children: \"Priority \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    scope: \"row\",\n                    children: \"Feedback \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    scope: \"row\",\n                    children: \" Doctor id \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: this.state.Conclusion.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [\" \", user.type]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: user.notes\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [\" \", user.nextaction]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [\" \", user.date_time]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [\" \", user.responsible]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [\" \", user.priority]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [\" \", user.feedback]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: user.dr_id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 57\n                  }, this)]\n                }, user.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CheckConclusion;","map":{"version":3,"sources":["E:/Git/aiTumorboard/react.js/tumorboardproject/src/ComponentsDoctor/CheckConclusion.js"],"names":["react","SpringApiUrl","SpringApiDocsListUrl","SpringPatientsListApiUrl","NursenavigatorUrl","axios","DatePicker","moment","BrowserRouter","Router","Switch","Route","Link","CheckConclusion","Component","constructor","props","abc","Changedate","event","setState","date_time","patientChange","x","undefined","location","state","patientID","get","then","res","Con","data","Conclusion","catch","e","console","log","alert","handleSubmit","requestOptions","method","headers","type","notes","nextaction","responsible","docsList","nursenav","priority","feedback","patientIdFk","nurse","fetch","body","JSON","stringify","response","ok","Error","status","json","result","handleInputChange","bind","target","value","name","handleChangeAttendingDoc","options","i","l","length","selected","push","attending_doc","componentDidMount","getApi","patientsList","render","yesterday","subtract","disablePastDt","current","isAfter","background","width","display","maxWidth","fontWeight","color","map","user","dr_id","id"],"mappings":"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","sourcesContent":["import './Tumor.css';\r\n\r\nimport '../ComponentsDoctor/Tumor.css'\r\n\r\nimport react from 'react';\r\nimport SpringApiUrl from '../services/UserServiceApi';\r\nimport SpringApiDocsListUrl from '../services/DoctorsList';\r\nimport SpringPatientsListApiUrl from '../services/PatientsList';\r\nimport NursenavigatorUrl from '../services/NursenavigatorURL';\r\n//Gimport './Tumor.css';\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-datetime';\r\nimport moment from 'moment-timezone';\r\nimport 'react-datetime/css/react-datetime.css';\r\n//import ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\r\n//import { Multiselect } from 'multiselect-react-dropdown';\r\n//import Select from \"react-select\";\r\n\r\n\r\n\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n//import CheckConclusionUrl from '../services/CheckConclusionUrl';\r\n\r\n\r\nclass CheckConclusion extends react.Component {\r\n\r\n    constructor(props) {\r\n\r\n        var abc = \"yes\";\r\n        super(props)\r\n        this.state = {\r\n            type: \"Diagnosis\",\r\n            notes: \"\",\r\n            nextaction: \"\",\r\n            date_time: (moment()),\r\n            responsible: \"\",\r\n            docsList: [],\r\n            nursenav: \"\",\r\n            priority: \"\",\r\n            patientIdFk: 1,\r\n            feedback: \"\",\r\n            nurse: [],\r\n            result: [],\r\n            Conclusion: []\r\n            \r\n        };\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.patientChange = this.patientChange.bind(this);\r\n    }\r\n\r\n\r\n\r\n    Changedate = (event) => {\r\n        this.setState({\r\n            date_time: event\r\n        });\r\n    };\r\n\r\n\r\n\r\n    handleInputChange(event) {\r\n\r\n        const target = event.target;\r\n        // alert(\"name:\"+target.name) ;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleChangeAttendingDoc(event) {\r\n        var options = event.target.options;\r\n        var value = [];\r\n        for (var i = 0, l = options.length; i < l; i++) {\r\n            if (options[i].selected) {\r\n                value.push(options[i].value);\r\n            }\r\n        }\r\n        this.setState({ attending_doc: value });\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        SpringApiDocsListUrl.getApi().then((response) => {\r\n            this.setState({ docsList: response.data })\r\n        });\r\n\r\n       \r\n        SpringApiUrl.getApi().then((response) => {\r\n            this.setState({ result: response.data })\r\n        });\r\n\r\n         SpringPatientsListApiUrl.getApi().then((response) => {\r\n      this.setState({ patientsList: response.data })\r\n    });\r\n    if (this.props.location.state == undefined)\r\n      return;\r\n    this.patientChange();\r\n  \r\n\r\n       // CheckConclusionUrl.getApiC().then((response) => {\r\n          //  this.setState({ Conclusion: response.data })\r\n       // });\r\n    }\r\n\r\n    \r\n  patientChange = event => {\r\n    var x = 0;\r\n    if (event == undefined) {\r\n      // alert(\"undefined\")\r\n      x = this.props.location.state.patientID;\r\n    }\r\n    //else x = event.value;\r\n\r\n\r\n    \r\n        axios.get('https://tumorboard-308606.el.r.appspot.com/getCheckconclusion?id=' + x)\r\n          .then(res => {\r\n            const Con = res.data;\r\n            this.setState({ Conclusion: Con });\r\n          })\r\n       \r\n          .catch(e => {\r\n            console.log(\"error: \" + e);\r\n            alert(\"This Patient ID does not exist in the system\");\r\n    \r\n          });\r\n    \r\n      };\r\n\r\n\r\n    handleSubmit = event => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n\r\n\r\n            type: this.state.type,\r\n            notes: this.state.notes,\r\n            nextaction: this.state.nextaction,\r\n            date_time: (moment()),\r\n            responsible: this.state.responsible,\r\n            docsList: [],\r\n            nursenav: this.state.nursenav,\r\n            priority: this.state.priority,\r\n            feedback: this.state.feedback,\r\n            patientIdFk: this.state.patientIdFk,\r\n            nurse: []\r\n        }\r\n\r\n        fetch('https://tumorboard-308606.el.r.appspot.com/addConclusion', {\r\n            method: \"POST\",\r\n            body: JSON.stringify(requestOptions),\r\n            headers: { \"Content-type\": \"application/json; charset=UTF-8\", \"Access-Control-Allow-Origin\": \"*\" }\r\n        })\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    alert(\"There is an error\");\r\n                    throw new Error(response.status);\r\n                }\r\n                else {\r\n                    alert(\"Conclusion Added\");\r\n                    return;\r\n                }\r\n            })\r\n            .then(json => console.log(json));\r\n        //.catch(err => console.log(err)); \r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n                const yesterday = moment().subtract(1, 'day');\r\n                const disablePastDt = current => {\r\n              return current.isAfter(yesterday);\r\n              };\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div id=\"header\" style={{ background: '#eee' }}>\r\n\r\n                </div>\r\n                <div className=\"container\" style={{ width: '100%', display: 'flex', maxWidth: '1800px', background: '#eee' }}>\r\n\r\n                    <div id=\"content_div\">\r\n                       \r\n\r\n                            <div id=\"content_header\"><h3>Conclusions</h3></div>\r\n                            <div\r\n                                id=\"container\"\r\n                                className=\"theme theme_font_neoskeuo theme_space_neoskeuo theme_color_neoskeuo\"\r\n                            >\r\n                               <table class=\"table shadow-soft rounded\">\r\n                                    <thead>\r\n                                        <tr style={{  fontWeight: \"bolder\", color: \"#3498DB\" }}>\r\n                                            <td scope=\"row\"> Type </td>\r\n                                            <td scope=\"row\"> Notes </td>\r\n                                            <td scope=\"row\"> Next Action </td>\r\n                                            <td scope=\"row\"> Date & Time </td>\r\n                                            <td scope=\"row\"> Responsible Doctor </td>\r\n                                            <td scope=\"row\">Priority </td>\r\n                                            <td scope=\"row\">Feedback </td>\r\n                                            <td scope=\"row\"> Doctor id </td>\r\n                                            \r\n\r\n\r\n                                        </tr>\r\n\r\n                                    </thead>\r\n                                    <tbody style={{ fontWeight: \"bold\" }}>\r\n                                        {\r\n                                            this.state.Conclusion.map(\r\n                                                user =>\r\n                                                    <tr key={user.id}>\r\n                                                        <td> {user.type}</td>\r\n                                                        <td>{user.notes}</td>\r\n                                                        <td> {user.nextaction}</td>\r\n                                                        <td> {user.date_time}</td>\r\n                                                        <td> {user.responsible}</td>\r\n                                                        <td> {user.priority}</td>\r\n                                                        <td> {user.feedback}</td>\r\n                                                        <td>{user.dr_id}</td>\r\n                                                       \r\n                                                    </tr>\r\n                                            )\r\n                                        }\r\n\r\n                                    </tbody>\r\n                                </table>\r\n\r\n                            </div>\r\n\r\n\r\n                        \r\n\r\n\r\n\r\n                       \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default CheckConclusion;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}